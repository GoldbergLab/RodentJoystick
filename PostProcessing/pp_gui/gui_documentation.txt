
General GUI Documentation
Multiple Days Feature
Single Day
Ability to Save All plots without Gui buttons/interface

Standard Color Order for Multiple Days: 'rgbkmcyrgbkmcyrgbkmcy'
x = done, s = started
make_plots.m
1.x Nosepoke Joystick Onset Distribution
    Arguments: 
    jstruct(s) - vector of jstructs to plot (list of days essentially)
    histogram interval - int > 0
    combineflag (1/0) - combine all data
    axes handle (possibly empty) - plots data onto axes handle
    Outputs:
    {[onset, probability], [onset, probability], ...} for each day
    labels (struct w/ xlabel, ylabel, title, legend (dates));
2.x Nosepoke Post Onset Distribution
    Arguments: 
    jstruct(s) - vector of jstructs to plot (list of days essentially)
    histogram interval - int > 0
    combineflag (1/0) - combine all data
    axes handle (possibly empty) - plots data onto axes handle
    Outputs:
    {[onset, probability], [onset, probability], ...} for each day
    labels (struct w/ xlabel, ylabel, title, legend (dates));
3.x Hold Length Distribution (Max Hold Length)
    Arguments:
    jstruct(s) - vector of jstructs to plot (list of days)
    threshold - int
    histogram interval - int > 0
    combineflag (1/0) - combine all data
    axes handle (possibly empty) - plots all data onto axes handle (even multiple days)

    Outputs:
    {[hold_length, probability], [hold_length, probability], ...} for each day
    labels (struct w/ xlabel, ylabel, title, legend (dates))
4.x  Hold Length Distribution under Threshold
    Arguments:
    jstruct(s) - vector of jstructs to plot (list of days)
    histogram interval - int > 0
    threshold - int
    combineflag (1/0) - combine all data
    axes handle (possibly empty) - plots all data onto axes handle (even multiple days)

    Outputs:
    data:= {[hold_length, probability], [hold_length, probability], ...} for each day (or combined)
    labels (struct w/ xlabel, ylabel, title, legend (dates))

generate_time_distr.m
5.x Nosepoke/Reward Distribution
    Arguments:
    jstruct(s) - vector of jstructs to plot (list of days)
    histogram interval - int > 0 (representing number of minutes)
    combineflag (1/0) - combine all data from jstructs
    Outputs:
    data:= 
    {[time bins, nosepoke count, reward count], [time bins, nosepoke count, reward count], ...}
    labels (struct w/ xlabel, ylabel, title, legend (dates))

hold_time_distr.m
6.x Hold Time Distribution (same as 2?-> No)
    All trajectory hold times
    Arguments:
    stats - struct
    histogram interval - 50
    end time (in ms) - 2000
    Outputs:
    data:=

7.x Reward Rate by Hold Time Histogram, 
8.x Joystick Onset to Reward Distribution
    Arguments:
    stats struct(s) (take trajectory struct from each though)
    histogram interval
    combineflag (1/0) - combine all data from jstructs
    end time (in ms - 2000 is normal)

    Outputs:
    data:= {[holdtimes, rewardtimes, js2rew], ...} for each day - note these are the raw lists of times, not processed for histogram use
    labels (struct w/ list of dates);

find_sector.m
9.x Activity Heat Map: 9. Distance, 10. Velocity, 11. Acceleration
    Arguments:
    stats struct - can only plot a single distribution
        no other arguments, unless you want ones for color mapping
        plot accumulated data from all days
    Outputs:
     pdf: = 100*100 cell array of probability distribution
    GUI Comments: Can't be used for plotting multiple days, lock to single day
10. x Velocity Heat Map:
    Arguments:
    stats struct - can only plot a single distribution
        no other arguments, unless you want ones for color mapping
        plot accumulated data from all days
    ax - to plot onto 
    logmapping - put on a logarithmic scale
    color
    Outputs:
     pdf: = 100*100 cell array of probability distribution
    GUI Comments: Can't be used for plotting multiple days, lock to single day

    approximate velocity as follows
    v_x = diff(x)2, v_y = diff(y)
    v = sqrt(v_x.^2+v_y.^2)
    plot velocity on the grid as follows;

11.x Acceleration Heat Map
    Arguments:
    stats struct - can only plot a single distribution

12.x Angle Distribution and Target Sector (Linear) 
    Arguments:
    reward_rate (typically 25)
    threshold (typically 75) - magnitude at which angles above are included in probability distribution

    Outputs: 
    Single Target Sector [[t1 t2]]
    Angle Probability Distribution (vector)
13.x Trajectory Analysis
    Arguments:
        Num plots (predecided)
        Time Window (start, end)

GUI features
    console - display key statistics 
    print features for all plots
    scrolling through directory with 

Ideas for Future Optimization
    Pass days by directory lists rather than filenames
    Save multiple postprocessing structs used repeatedly in initial postprocessing step rather
        than regenerate each structure each time.
    Postprocessing structures to be saved
    Already saved:
        jstruct
        stats
    Should save (recognize that combining data would pose some difficulties - figure out a way 
        around this - probably not that hard)
        raw holdtime data, including summary stats;
            would have
        velocity and acceleration heat maps;
        trajectory analysis bin and structure;

Functions by Input (current/suggested) improved by dedicated combine function?;
np_js_distribution(jstructlist/ statslist) y
np_post_distribution(jslist/statslist) y
holdtime_firstcontact_distribution(jslist) y

heat_maps(stats/dir)
activity_heat_map
velocity_heat_map,velocityvar_heat_map, accel_heat_map, acceltan_heat_map, accelvar_heat_map
    calls get_vel_accel_distr(stats) -> get combined stats? not a problem;
    ->compute_vel_accel_distr(stats/day)
    ->(data) = get_vel_accel_distr(dirlist, combineflag)
hold_time_distr group (jslist/statslist) y
    calls get_rewardandht_times(jslist/dirlist);
    -> get_rewardandht_times(dirlist);
        load reward/ht times data from folder
    -> compute_rewardandht_times(jslist/dirlist);
        uses stats
multi_time_distr
    jslist ->dir list -> list of jstructs



recommendations for combined functions:
[statsfname struct list, days strings (cell array)] = load_stats(dirlist, combineflag)
[jstructlist (struct), days strings] = load_jstructs(dirlist, combineflag)














